/*
* generated by Xtext
*/
grammar InternalMgplDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.mgpl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.mgpl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.mgpl.services.MgplDSLGrammarAccess;

}

@parser::members {
 
 	private MgplDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MgplDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGame
entryRuleGame 
:
{ before(grammarAccess.getGameRule()); }
	 ruleGame
{ after(grammarAccess.getGameRule()); } 
	 EOF 
;

// Rule Game
ruleGame
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGameAccess().getGroup()); }
(rule__Game__Group__0)
{ after(grammarAccess.getGameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaration
entryRuleDeclaration 
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationAccess().getGroup()); }
(rule__Declaration__Group__0)
{ after(grammarAccess.getDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarDecl
entryRuleVarDecl 
:
{ before(grammarAccess.getVarDeclRule()); }
	 ruleVarDecl
{ after(grammarAccess.getVarDeclRule()); } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarDeclAccess().getGroup()); }
(rule__VarDecl__Group__0)
{ after(grammarAccess.getVarDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInit
entryRuleInit 
:
{ before(grammarAccess.getInitRule()); }
	 ruleInit
{ after(grammarAccess.getInitRule()); } 
	 EOF 
;

// Rule Init
ruleInit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitAccess().getGroup()); }
(rule__Init__Group__0)
{ after(grammarAccess.getInitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjDecl
entryRuleObjDecl 
:
{ before(grammarAccess.getObjDeclRule()); }
	 ruleObjDecl
{ after(grammarAccess.getObjDeclRule()); } 
	 EOF 
;

// Rule ObjDecl
ruleObjDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjDeclAccess().getGroup()); }
(rule__ObjDecl__Group__0)
{ after(grammarAccess.getObjDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlock
entryRuleBlock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getAlternatives()); }
(rule__Block__Alternatives)
{ after(grammarAccess.getBlockAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnimBlock
entryRuleAnimBlock 
:
{ before(grammarAccess.getAnimBlockRule()); }
	 ruleAnimBlock
{ after(grammarAccess.getAnimBlockRule()); } 
	 EOF 
;

// Rule AnimBlock
ruleAnimBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnimBlockAccess().getGroup()); }
(rule__AnimBlock__Group__0)
{ after(grammarAccess.getAnimBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEventBlock
entryRuleEventBlock 
:
{ before(grammarAccess.getEventBlockRule()); }
	 ruleEventBlock
{ after(grammarAccess.getEventBlockRule()); } 
	 EOF 
;

// Rule EventBlock
ruleEventBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventBlockAccess().getGroup()); }
(rule__EventBlock__Group__0)
{ after(grammarAccess.getEventBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjType
entryRuleObjType 
:
{ before(grammarAccess.getObjTypeRule()); }
	 ruleObjType
{ after(grammarAccess.getObjTypeRule()); } 
	 EOF 
;

// Rule ObjType
ruleObjType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjTypeAccess().getAlternatives()); }
(rule__ObjType__Alternatives)
{ after(grammarAccess.getObjTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeystroke
entryRuleKeystroke 
:
{ before(grammarAccess.getKeystrokeRule()); }
	 ruleKeystroke
{ after(grammarAccess.getKeystrokeRule()); } 
	 EOF 
;

// Rule Keystroke
ruleKeystroke
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeystrokeAccess().getAlternatives()); }
(rule__Keystroke__Alternatives)
{ after(grammarAccess.getKeystrokeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatementBlock
entryRuleStatementBlock 
:
{ before(grammarAccess.getStatementBlockRule()); }
	 ruleStatementBlock
{ after(grammarAccess.getStatementBlockRule()); } 
	 EOF 
;

// Rule StatementBlock
ruleStatementBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementBlockAccess().getGroup()); }
(rule__StatementBlock__Group__0)
{ after(grammarAccess.getStatementBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStmt
entryRuleStmt 
:
{ before(grammarAccess.getStmtRule()); }
	 ruleStmt
{ after(grammarAccess.getStmtRule()); } 
	 EOF 
;

// Rule Stmt
ruleStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStmtAccess().getAlternatives()); }
(rule__Stmt__Alternatives)
{ after(grammarAccess.getStmtAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForStmt
entryRuleForStmt 
:
{ before(grammarAccess.getForStmtRule()); }
	 ruleForStmt
{ after(grammarAccess.getForStmtRule()); } 
	 EOF 
;

// Rule ForStmt
ruleForStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForStmtAccess().getGroup()); }
(rule__ForStmt__Group__0)
{ after(grammarAccess.getForStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfStmt
entryRuleIfStmt 
:
{ before(grammarAccess.getIfStmtRule()); }
	 ruleIfStmt
{ after(grammarAccess.getIfStmtRule()); } 
	 EOF 
;

// Rule IfStmt
ruleIfStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfStmtAccess().getGroup()); }
(rule__IfStmt__Group__0)
{ after(grammarAccess.getIfStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElseStmt
entryRuleElseStmt 
:
{ before(grammarAccess.getElseStmtRule()); }
	 ruleElseStmt
{ after(grammarAccess.getElseStmtRule()); } 
	 EOF 
;

// Rule ElseStmt
ruleElseStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElseStmtAccess().getGroup()); }
(rule__ElseStmt__Group__0)
{ after(grammarAccess.getElseStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssStmt
entryRuleAssStmt 
:
{ before(grammarAccess.getAssStmtRule()); }
	 ruleAssStmt
{ after(grammarAccess.getAssStmtRule()); } 
	 EOF 
;

// Rule AssStmt
ruleAssStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssStmtAccess().getGroup()); }
(rule__AssStmt__Group__0)
{ after(grammarAccess.getAssStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssStmt2
entryRuleAssStmt2 
:
{ before(grammarAccess.getAssStmt2Rule()); }
	 ruleAssStmt2
{ after(grammarAccess.getAssStmt2Rule()); } 
	 EOF 
;

// Rule AssStmt2
ruleAssStmt2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssStmt2Access().getGroup()); }
(rule__AssStmt2__Group__0)
{ after(grammarAccess.getAssStmt2Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttrList
entryRuleAttrList 
:
{ before(grammarAccess.getAttrListRule()); }
	 ruleAttrList
{ after(grammarAccess.getAttrListRule()); } 
	 EOF 
;

// Rule AttrList
ruleAttrList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttrListAccess().getGroup()); }
(rule__AttrList__Group__0)
{ after(grammarAccess.getAttrListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttrAss
entryRuleAttrAss 
:
{ before(grammarAccess.getAttrAssRule()); }
	 ruleAttrAss
{ after(grammarAccess.getAttrAssRule()); } 
	 EOF 
;

// Rule AttrAss
ruleAttrAss
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttrAssAccess().getGroup()); }
(rule__AttrAss__Group__0)
{ after(grammarAccess.getAttrAssAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr
entryRuleExpr 
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprAccess().getDisjParserRuleCall()); }
	ruleDisj
{ after(grammarAccess.getExprAccess().getDisjParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDisj
entryRuleDisj 
:
{ before(grammarAccess.getDisjRule()); }
	 ruleDisj
{ after(grammarAccess.getDisjRule()); } 
	 EOF 
;

// Rule Disj
ruleDisj
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDisjAccess().getGroup()); }
(rule__Disj__Group__0)
{ after(grammarAccess.getDisjAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConj
entryRuleConj 
:
{ before(grammarAccess.getConjRule()); }
	 ruleConj
{ after(grammarAccess.getConjRule()); } 
	 EOF 
;

// Rule Conj
ruleConj
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConjAccess().getGroup()); }
(rule__Conj__Group__0)
{ after(grammarAccess.getConjAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelat
entryRuleRelat 
:
{ before(grammarAccess.getRelatRule()); }
	 ruleRelat
{ after(grammarAccess.getRelatRule()); } 
	 EOF 
;

// Rule Relat
ruleRelat
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelatAccess().getGroup()); }
(rule__Relat__Group__0)
{ after(grammarAccess.getRelatAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdd
entryRuleAdd 
:
{ before(grammarAccess.getAddRule()); }
	 ruleAdd
{ after(grammarAccess.getAddRule()); } 
	 EOF 
;

// Rule Add
ruleAdd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddAccess().getGroup()); }
(rule__Add__Group__0)
{ after(grammarAccess.getAddAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMult
entryRuleMult 
:
{ before(grammarAccess.getMultRule()); }
	 ruleMult
{ after(grammarAccess.getMultRule()); } 
	 EOF 
;

// Rule Mult
ruleMult
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultAccess().getGroup()); }
(rule__Mult__Group__0)
{ after(grammarAccess.getMultAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnary
entryRuleUnary 
:
{ before(grammarAccess.getUnaryRule()); }
	 ruleUnary
{ after(grammarAccess.getUnaryRule()); } 
	 EOF 
;

// Rule Unary
ruleUnary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryAccess().getGroup()); }
(rule__Unary__Group__0)
{ after(grammarAccess.getUnaryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtom
entryRuleAtom 
:
{ before(grammarAccess.getAtomRule()); }
	 ruleAtom
{ after(grammarAccess.getAtomRule()); } 
	 EOF 
;

// Rule Atom
ruleAtom
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomAccess().getGroup()); }
(rule__Atom__Group__0)
{ after(grammarAccess.getAtomAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVar
entryRuleVar 
:
{ before(grammarAccess.getVarRule()); }
	 ruleVar
{ after(grammarAccess.getVarRule()); } 
	 EOF 
;

// Rule Var
ruleVar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarAccess().getGroup()); }
(rule__Var__Group__0)
{ after(grammarAccess.getVarAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Declaration__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getVarAssignment_0_0()); }
(rule__Declaration__VarAssignment_0_0)
{ after(grammarAccess.getDeclarationAccess().getVarAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getObjAssignment_0_1()); }
(rule__Declaration__ObjAssignment_0_1)
{ after(grammarAccess.getDeclarationAccess().getObjAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getExprAssignment_2_0()); }
(rule__VarDecl__ExprAssignment_2_0)?
{ after(grammarAccess.getVarDeclAccess().getExprAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getVarDeclAccess().getGroup_2_1()); }
(rule__VarDecl__Group_2_1__0)
{ after(grammarAccess.getVarDeclAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjDeclAccess().getGroup_2_0()); }
(rule__ObjDecl__Group_2_0__0)
{ after(grammarAccess.getObjDeclAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getObjDeclAccess().getGroup_2_1()); }
(rule__ObjDecl__Group_2_1__0)
{ after(grammarAccess.getObjDeclAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getAnimBlockParserRuleCall_0()); }
	ruleAnimBlock
{ after(grammarAccess.getBlockAccess().getAnimBlockParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBlockAccess().getEventBlockParserRuleCall_1()); }
	ruleEventBlock
{ after(grammarAccess.getBlockAccess().getEventBlockParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjTypeAccess().getRectangleKeyword_0()); }

	'rectangle' 

{ after(grammarAccess.getObjTypeAccess().getRectangleKeyword_0()); }
)

    |(
{ before(grammarAccess.getObjTypeAccess().getTriangleKeyword_1()); }

	'triangle' 

{ after(grammarAccess.getObjTypeAccess().getTriangleKeyword_1()); }
)

    |(
{ before(grammarAccess.getObjTypeAccess().getCircleKeyword_2()); }

	'circle' 

{ after(grammarAccess.getObjTypeAccess().getCircleKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keystroke__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeystrokeAccess().getSpaceKeyword_0()); }

	'space' 

{ after(grammarAccess.getKeystrokeAccess().getSpaceKeyword_0()); }
)

    |(
{ before(grammarAccess.getKeystrokeAccess().getLeftarrowKeyword_1()); }

	'leftarrow' 

{ after(grammarAccess.getKeystrokeAccess().getLeftarrowKeyword_1()); }
)

    |(
{ before(grammarAccess.getKeystrokeAccess().getRightarrowKeyword_2()); }

	'rightarrow' 

{ after(grammarAccess.getKeystrokeAccess().getRightarrowKeyword_2()); }
)

    |(
{ before(grammarAccess.getKeystrokeAccess().getUparrowKeyword_3()); }

	'uparrow' 

{ after(grammarAccess.getKeystrokeAccess().getUparrowKeyword_3()); }
)

    |(
{ before(grammarAccess.getKeystrokeAccess().getDownarrowKeyword_4()); }

	'downarrow' 

{ after(grammarAccess.getKeystrokeAccess().getDownarrowKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getIfStmtParserRuleCall_0()); }
	ruleIfStmt
{ after(grammarAccess.getStmtAccess().getIfStmtParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getForStmtParserRuleCall_1()); }
	ruleForStmt
{ after(grammarAccess.getStmtAccess().getForStmtParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getAssStmtParserRuleCall_2()); }
	ruleAssStmt
{ after(grammarAccess.getStmtAccess().getAssStmtParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relat__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelatAccess().getEqualsSignEqualsSignKeyword_1_0_0()); }

	'==' 

{ after(grammarAccess.getRelatAccess().getEqualsSignEqualsSignKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getRelatAccess().getLessThanSignKeyword_1_0_1()); }

	'<' 

{ after(grammarAccess.getRelatAccess().getLessThanSignKeyword_1_0_1()); }
)

    |(
{ before(grammarAccess.getRelatAccess().getLessThanSignEqualsSignKeyword_1_0_2()); }

	'<=' 

{ after(grammarAccess.getRelatAccess().getLessThanSignEqualsSignKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddAccess().getPlusSignKeyword_1_0_0()); }

	'+' 

{ after(grammarAccess.getAddAccess().getPlusSignKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getAddAccess().getHyphenMinusKeyword_1_0_1()); }

	'-' 

{ after(grammarAccess.getAddAccess().getHyphenMinusKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultAccess().getAsteriskKeyword_1_0_0()); }

	'*' 

{ after(grammarAccess.getMultAccess().getAsteriskKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getMultAccess().getSolidusKeyword_1_0_1()); }

	'/' 

{ after(grammarAccess.getMultAccess().getSolidusKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getExclamationMarkKeyword_0_0()); }

	'!' 

{ after(grammarAccess.getUnaryAccess().getExclamationMarkKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getUnaryAccess().getHyphenMinusKeyword_0_1()); }

	'-' 

{ after(grammarAccess.getUnaryAccess().getHyphenMinusKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getIntAssignment_1_0()); }
(rule__Atom__IntAssignment_1_0)
{ after(grammarAccess.getAtomAccess().getIntAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getAtomAccess().getGroup_1_1()); }
(rule__Atom__Group_1_1__0)
{ after(grammarAccess.getAtomAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getAtomAccess().getGroup_1_2()); }
(rule__Atom__Group_1_2__0)
{ after(grammarAccess.getAtomAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getGroup_1_0()); }
(rule__Var__Group_1_0__0)
{ after(grammarAccess.getVarAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getVarAccess().getGroup_1_1()); }
(rule__Var__Group_1_1__0)
{ after(grammarAccess.getVarAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGameAssignment_0()); }
(rule__Model__GameAssignment_0)
{ after(grammarAccess.getModelAccess().getGameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDeclAssignment_1()); }
(rule__Model__DeclAssignment_1)*
{ after(grammarAccess.getModelAccess().getDeclAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getStmtAssignment_2()); }
(rule__Model__StmtAssignment_2)
{ after(grammarAccess.getModelAccess().getStmtAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getBlocksAssignment_3()); }
(rule__Model__BlocksAssignment_3)*
{ after(grammarAccess.getModelAccess().getBlocksAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Game__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Game__Group__0__Impl
	rule__Game__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameAccess().getGameKeyword_0()); }

	'game' 

{ after(grammarAccess.getGameAccess().getGameKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Game__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Game__Group__1__Impl
	rule__Game__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameAccess().getNameAssignment_1()); }
(rule__Game__NameAssignment_1)
{ after(grammarAccess.getGameAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Game__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Game__Group__2__Impl
	rule__Game__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getGameAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Game__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Game__Group__3__Impl
	rule__Game__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameAccess().getAttrAssignment_3()); }
(rule__Game__AttrAssignment_3)
{ after(grammarAccess.getGameAccess().getAttrAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Game__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Game__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Game__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getGameAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__0__Impl
	rule__Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getAlternatives_0()); }
(rule__Declaration__Alternatives_0)
{ after(grammarAccess.getDeclarationAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getDeclarationAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group__0__Impl
	rule__VarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getIntKeyword_0()); }

	'int' 

{ after(grammarAccess.getVarDeclAccess().getIntKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group__1__Impl
	rule__VarDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getNameAssignment_1()); }
(rule__VarDecl__NameAssignment_1)
{ after(grammarAccess.getVarDeclAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getAlternatives_2()); }
(rule__VarDecl__Alternatives_2)
{ after(grammarAccess.getVarDeclAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VarDecl__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group_2_1__0__Impl
	rule__VarDecl__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getLeftSquareBracketKeyword_2_1_0()); }

	'[' 

{ after(grammarAccess.getVarDeclAccess().getLeftSquareBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group_2_1__1__Impl
	rule__VarDecl__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getIntAssignment_2_1_1()); }
(rule__VarDecl__IntAssignment_2_1_1)
{ after(grammarAccess.getVarDeclAccess().getIntAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDecl__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDecl__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getRightSquareBracketKeyword_2_1_2()); }

	']' 

{ after(grammarAccess.getVarDeclAccess().getRightSquareBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Init__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Init__Group__0__Impl
	rule__Init__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitAccess().getEqualsSignKeyword_0()); }

	'=' 

{ after(grammarAccess.getInitAccess().getEqualsSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Init__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Init__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitAccess().getExprAssignment_1()); }
(rule__Init__ExprAssignment_1)
{ after(grammarAccess.getInitAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ObjDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjDecl__Group__0__Impl
	rule__ObjDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjDeclAccess().getTypeAssignment_0()); }
(rule__ObjDecl__TypeAssignment_0)
{ after(grammarAccess.getObjDeclAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjDecl__Group__1__Impl
	rule__ObjDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjDeclAccess().getNameAssignment_1()); }
(rule__ObjDecl__NameAssignment_1)
{ after(grammarAccess.getObjDeclAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjDeclAccess().getAlternatives_2()); }
(rule__ObjDecl__Alternatives_2)
{ after(grammarAccess.getObjDeclAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ObjDecl__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjDecl__Group_2_0__0__Impl
	rule__ObjDecl__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjDeclAccess().getLeftParenthesisKeyword_2_0_0()); }

	'(' 

{ after(grammarAccess.getObjDeclAccess().getLeftParenthesisKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjDecl__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjDecl__Group_2_0__1__Impl
	rule__ObjDecl__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjDeclAccess().getAttrAssignment_2_0_1()); }
(rule__ObjDecl__AttrAssignment_2_0_1)
{ after(grammarAccess.getObjDeclAccess().getAttrAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjDecl__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjDecl__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjDeclAccess().getRightParenthesisKeyword_2_0_2()); }

	')' 

{ after(grammarAccess.getObjDeclAccess().getRightParenthesisKeyword_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ObjDecl__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjDecl__Group_2_1__0__Impl
	rule__ObjDecl__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjDeclAccess().getLeftSquareBracketKeyword_2_1_0()); }

	'[' 

{ after(grammarAccess.getObjDeclAccess().getLeftSquareBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjDecl__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjDecl__Group_2_1__1__Impl
	rule__ObjDecl__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjDeclAccess().getIntAssignment_2_1_1()); }
(rule__ObjDecl__IntAssignment_2_1_1)
{ after(grammarAccess.getObjDeclAccess().getIntAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjDecl__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjDecl__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjDeclAccess().getRightSquareBracketKeyword_2_1_2()); }

	']' 

{ after(grammarAccess.getObjDeclAccess().getRightSquareBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AnimBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnimBlock__Group__0__Impl
	rule__AnimBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnimBlockAccess().getAnimationKeyword_0()); }

	'animation' 

{ after(grammarAccess.getAnimBlockAccess().getAnimationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnimBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnimBlock__Group__1__Impl
	rule__AnimBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnimBlockAccess().getNameAssignment_1()); }
(rule__AnimBlock__NameAssignment_1)
{ after(grammarAccess.getAnimBlockAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnimBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnimBlock__Group__2__Impl
	rule__AnimBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnimBlockAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getAnimBlockAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnimBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnimBlock__Group__3__Impl
	rule__AnimBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnimBlockAccess().getTypeAssignment_3()); }
(rule__AnimBlock__TypeAssignment_3)
{ after(grammarAccess.getAnimBlockAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnimBlock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnimBlock__Group__4__Impl
	rule__AnimBlock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnimBlockAccess().getObjNameAssignment_4()); }
(rule__AnimBlock__ObjNameAssignment_4)
{ after(grammarAccess.getAnimBlockAccess().getObjNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnimBlock__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnimBlock__Group__5__Impl
	rule__AnimBlock__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnimBlockAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getAnimBlockAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnimBlock__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnimBlock__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnimBlockAccess().getStmtAssignment_6()); }
(rule__AnimBlock__StmtAssignment_6)
{ after(grammarAccess.getAnimBlockAccess().getStmtAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__EventBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventBlock__Group__0__Impl
	rule__EventBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventBlockAccess().getOnKeyword_0()); }

	'on' 

{ after(grammarAccess.getEventBlockAccess().getOnKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventBlock__Group__1__Impl
	rule__EventBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventBlockAccess().getKeyAssignment_1()); }
(rule__EventBlock__KeyAssignment_1)
{ after(grammarAccess.getEventBlockAccess().getKeyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EventBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EventBlock__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventBlockAccess().getStmtAssignment_2()); }
(rule__EventBlock__StmtAssignment_2)
{ after(grammarAccess.getEventBlockAccess().getStmtAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StatementBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group__0__Impl
	rule__StatementBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getStatementBlockAction_0()); }
(

)
{ after(grammarAccess.getStatementBlockAccess().getStatementBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getGroup_1()); }
(rule__StatementBlock__Group_1__0)
{ after(grammarAccess.getStatementBlockAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StatementBlock__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group_1__0__Impl
	rule__StatementBlock__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getLeftCurlyBracketKeyword_1_0()); }

	'{' 

{ after(grammarAccess.getStatementBlockAccess().getLeftCurlyBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementBlock__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group_1__1__Impl
	rule__StatementBlock__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getStmtAssignment_1_1()); }
(rule__StatementBlock__StmtAssignment_1_1)*
{ after(grammarAccess.getStatementBlockAccess().getStmtAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StatementBlock__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StatementBlock__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getRightCurlyBracketKeyword_1_2()); }

	'}' 

{ after(grammarAccess.getStatementBlockAccess().getRightCurlyBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ForStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStmt__Group__0__Impl
	rule__ForStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStmtAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getForStmtAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStmt__Group__1__Impl
	rule__ForStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStmtAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getForStmtAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmt__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStmt__Group__2__Impl
	rule__ForStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStmtAccess().getAss1Assignment_2()); }
(rule__ForStmt__Ass1Assignment_2)
{ after(grammarAccess.getForStmtAccess().getAss1Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmt__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStmt__Group__3__Impl
	rule__ForStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStmtAccess().getExprAssignment_3()); }
(rule__ForStmt__ExprAssignment_3)
{ after(grammarAccess.getForStmtAccess().getExprAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmt__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStmt__Group__4__Impl
	rule__ForStmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStmtAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getForStmtAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmt__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStmt__Group__5__Impl
	rule__ForStmt__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStmtAccess().getAss2Assignment_5()); }
(rule__ForStmt__Ass2Assignment_5)
{ after(grammarAccess.getForStmtAccess().getAss2Assignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmt__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStmt__Group__6__Impl
	rule__ForStmt__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStmtAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getForStmtAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStmt__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStmt__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStmtAccess().getStmtAssignment_7()); }
(rule__ForStmt__StmtAssignment_7)
{ after(grammarAccess.getForStmtAccess().getStmtAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__IfStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStmt__Group__0__Impl
	rule__IfStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStmt__Group__1__Impl
	rule__IfStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIfStmtAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStmt__Group__2__Impl
	rule__IfStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getExprAssignment_2()); }
(rule__IfStmt__ExprAssignment_2)
{ after(grammarAccess.getIfStmtAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStmt__Group__3__Impl
	rule__IfStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getIfStmtAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStmt__Group__4__Impl
	rule__IfStmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getStmtAssignment_4()); }
(rule__IfStmt__StmtAssignment_4)
{ after(grammarAccess.getIfStmtAccess().getStmtAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStmt__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getElseAssignment_5()); }
(rule__IfStmt__ElseAssignment_5)?
{ after(grammarAccess.getIfStmtAccess().getElseAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ElseStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElseStmt__Group__0__Impl
	rule__ElseStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseStmtAccess().getElseKeyword_0()); }

	'else' 

{ after(grammarAccess.getElseStmtAccess().getElseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElseStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElseStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseStmtAccess().getStmtAssignment_1()); }
(rule__ElseStmt__StmtAssignment_1)
{ after(grammarAccess.getElseStmtAccess().getStmtAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssStmt__Group__0__Impl
	rule__AssStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssStmtAccess().getVarAssignment_0()); }
(rule__AssStmt__VarAssignment_0)
{ after(grammarAccess.getAssStmtAccess().getVarAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssStmt__Group__1__Impl
	rule__AssStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssStmtAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAssStmtAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssStmt__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssStmt__Group__2__Impl
	rule__AssStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssStmtAccess().getExprAssignment_2()); }
(rule__AssStmt__ExprAssignment_2)
{ after(grammarAccess.getAssStmtAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssStmt__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssStmt__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssStmtAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getAssStmtAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AssStmt2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssStmt2__Group__0__Impl
	rule__AssStmt2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssStmt2Access().getVarAssignment_0()); }
(rule__AssStmt2__VarAssignment_0)
{ after(grammarAccess.getAssStmt2Access().getVarAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssStmt2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssStmt2__Group__1__Impl
	rule__AssStmt2__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssStmt2Access().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAssStmt2Access().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssStmt2__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssStmt2__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt2__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssStmt2Access().getExprAssignment_2()); }
(rule__AssStmt2__ExprAssignment_2)
{ after(grammarAccess.getAssStmt2Access().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttrList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrList__Group__0__Impl
	rule__AttrList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrListAccess().getAttrListAction_0()); }
(

)
{ after(grammarAccess.getAttrListAccess().getAttrListAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrListAccess().getGroup_1()); }
(rule__AttrList__Group_1__0)
{ after(grammarAccess.getAttrListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttrList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrList__Group_1__0__Impl
	rule__AttrList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrListAccess().getAttrAssignment_1_0()); }
(rule__AttrList__AttrAssignment_1_0)?
{ after(grammarAccess.getAttrListAccess().getAttrAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrListAccess().getGroup_1_1()); }
(rule__AttrList__Group_1_1__0)*
{ after(grammarAccess.getAttrListAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttrList__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrList__Group_1_1__0__Impl
	rule__AttrList__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrList__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrListAccess().getCommaKeyword_1_1_0()); }

	',' 

{ after(grammarAccess.getAttrListAccess().getCommaKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrList__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrList__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrList__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrListAccess().getAttrAssignment_1_1_1()); }
(rule__AttrList__AttrAssignment_1_1_1)
{ after(grammarAccess.getAttrListAccess().getAttrAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttrAss__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrAss__Group__0__Impl
	rule__AttrAss__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAssAccess().getNameAssignment_0()); }
(rule__AttrAss__NameAssignment_0)
{ after(grammarAccess.getAttrAssAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrAss__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrAss__Group__1__Impl
	rule__AttrAss__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAssAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAttrAssAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttrAss__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttrAss__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAssAccess().getExprAssignment_2()); }
(rule__AttrAss__ExprAssignment_2)
{ after(grammarAccess.getAttrAssAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Disj__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Disj__Group__0__Impl
	rule__Disj__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Disj__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjAccess().getConjAssignment_0()); }
(rule__Disj__ConjAssignment_0)
{ after(grammarAccess.getDisjAccess().getConjAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Disj__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Disj__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Disj__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjAccess().getGroup_1()); }
(rule__Disj__Group_1__0)*
{ after(grammarAccess.getDisjAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Disj__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Disj__Group_1__0__Impl
	rule__Disj__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Disj__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjAccess().getVerticalLineVerticalLineKeyword_1_0()); }

	'||' 

{ after(grammarAccess.getDisjAccess().getVerticalLineVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Disj__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Disj__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Disj__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjAccess().getConjAssignment_1_1()); }
(rule__Disj__ConjAssignment_1_1)
{ after(grammarAccess.getDisjAccess().getConjAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Conj__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conj__Group__0__Impl
	rule__Conj__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conj__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConjAccess().getRelatAssignment_0()); }
(rule__Conj__RelatAssignment_0)
{ after(grammarAccess.getConjAccess().getRelatAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conj__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conj__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conj__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConjAccess().getGroup_1()); }
(rule__Conj__Group_1__0)*
{ after(grammarAccess.getConjAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Conj__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conj__Group_1__0__Impl
	rule__Conj__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conj__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConjAccess().getAmpersandAmpersandKeyword_1_0()); }

	'&&' 

{ after(grammarAccess.getConjAccess().getAmpersandAmpersandKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conj__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conj__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conj__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConjAccess().getRelatAssignment_1_1()); }
(rule__Conj__RelatAssignment_1_1)
{ after(grammarAccess.getConjAccess().getRelatAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relat__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relat__Group__0__Impl
	rule__Relat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relat__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelatAccess().getAddAssignment_0()); }
(rule__Relat__AddAssignment_0)
{ after(grammarAccess.getRelatAccess().getAddAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relat__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relat__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relat__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelatAccess().getGroup_1()); }
(rule__Relat__Group_1__0)*
{ after(grammarAccess.getRelatAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relat__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relat__Group_1__0__Impl
	rule__Relat__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relat__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelatAccess().getAlternatives_1_0()); }
(rule__Relat__Alternatives_1_0)
{ after(grammarAccess.getRelatAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relat__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relat__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relat__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelatAccess().getAddAssignment_1_1()); }
(rule__Relat__AddAssignment_1_1)
{ after(grammarAccess.getRelatAccess().getAddAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Add__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Add__Group__0__Impl
	rule__Add__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddAccess().getMultAssignment_0()); }
(rule__Add__MultAssignment_0)
{ after(grammarAccess.getAddAccess().getMultAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Add__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddAccess().getGroup_1()); }
(rule__Add__Group_1__0)*
{ after(grammarAccess.getAddAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Add__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Add__Group_1__0__Impl
	rule__Add__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddAccess().getAlternatives_1_0()); }
(rule__Add__Alternatives_1_0)
{ after(grammarAccess.getAddAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Add__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddAccess().getMultAssignment_1_1()); }
(rule__Add__MultAssignment_1_1)
{ after(grammarAccess.getAddAccess().getMultAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Mult__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mult__Group__0__Impl
	rule__Mult__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultAccess().getUnaryAssignment_0()); }
(rule__Mult__UnaryAssignment_0)
{ after(grammarAccess.getMultAccess().getUnaryAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mult__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mult__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultAccess().getGroup_1()); }
(rule__Mult__Group_1__0)*
{ after(grammarAccess.getMultAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Mult__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mult__Group_1__0__Impl
	rule__Mult__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultAccess().getAlternatives_1_0()); }
(rule__Mult__Alternatives_1_0)
{ after(grammarAccess.getMultAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mult__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mult__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultAccess().getUnaryAssignment_1_1()); }
(rule__Mult__UnaryAssignment_1_1)
{ after(grammarAccess.getMultAccess().getUnaryAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Unary__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary__Group__0__Impl
	rule__Unary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getAlternatives_0()); }
(rule__Unary__Alternatives_0)*
{ after(grammarAccess.getUnaryAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unary__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unary__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getAtomAssignment_1()); }
(rule__Unary__AtomAssignment_1)
{ after(grammarAccess.getUnaryAccess().getAtomAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atom__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group__0__Impl
	rule__Atom__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getAtomAction_0()); }
(

)
{ after(grammarAccess.getAtomAccess().getAtomAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getAlternatives_1()); }
(rule__Atom__Alternatives_1)
{ after(grammarAccess.getAtomAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atom__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group_1_1__0__Impl
	rule__Atom__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getVar1Assignment_1_1_0()); }
(rule__Atom__Var1Assignment_1_1_0)
{ after(grammarAccess.getAtomAccess().getVar1Assignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getGroup_1_1_1()); }
(rule__Atom__Group_1_1_1__0)?
{ after(grammarAccess.getAtomAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atom__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group_1_1_1__0__Impl
	rule__Atom__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getTouchesKeyword_1_1_1_0()); }

	'touches' 

{ after(grammarAccess.getAtomAccess().getTouchesKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getVar2Assignment_1_1_1_1()); }
(rule__Atom__Var2Assignment_1_1_1_1)
{ after(grammarAccess.getAtomAccess().getVar2Assignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atom__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group_1_2__0__Impl
	rule__Atom__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getLeftParenthesisKeyword_1_2_0()); }

	'(' 

{ after(grammarAccess.getAtomAccess().getLeftParenthesisKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group_1_2__1__Impl
	rule__Atom__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getExprAssignment_1_2_1()); }
(rule__Atom__ExprAssignment_1_2_1)
{ after(grammarAccess.getAtomAccess().getExprAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atom__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atom__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getRightParenthesisKeyword_1_2_2()); }

	')' 

{ after(grammarAccess.getAtomAccess().getRightParenthesisKeyword_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Var__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group__0__Impl
	rule__Var__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getNameAssignment_0()); }
(rule__Var__NameAssignment_0)
{ after(grammarAccess.getVarAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getAlternatives_1()); }
(rule__Var__Alternatives_1)?
{ after(grammarAccess.getVarAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Var__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group_1_0__0__Impl
	rule__Var__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getLeftSquareBracketKeyword_1_0_0()); }

	'[' 

{ after(grammarAccess.getVarAccess().getLeftSquareBracketKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group_1_0__1__Impl
	rule__Var__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getExprAssignment_1_0_1()); }
(rule__Var__ExprAssignment_1_0_1)
{ after(grammarAccess.getVarAccess().getExprAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group_1_0__2__Impl
	rule__Var__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getRightSquareBracketKeyword_1_0_2()); }

	']' 

{ after(grammarAccess.getVarAccess().getRightSquareBracketKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getGroup_1_0_3()); }
(rule__Var__Group_1_0_3__0)?
{ after(grammarAccess.getVarAccess().getGroup_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Var__Group_1_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group_1_0_3__0__Impl
	rule__Var__Group_1_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getFullStopKeyword_1_0_3_0()); }

	'.' 

{ after(grammarAccess.getVarAccess().getFullStopKeyword_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group_1_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group_1_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getSubnameAssignment_1_0_3_1()); }
(rule__Var__SubnameAssignment_1_0_3_1)
{ after(grammarAccess.getVarAccess().getSubnameAssignment_1_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Var__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group_1_1__0__Impl
	rule__Var__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getFullStopKeyword_1_1_0()); }

	'.' 

{ after(grammarAccess.getVarAccess().getFullStopKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Var__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Var__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getSubnameAssignment_1_1_1()); }
(rule__Var__SubnameAssignment_1_1_1)
{ after(grammarAccess.getVarAccess().getSubnameAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__GameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGameGameParserRuleCall_0_0()); }
	ruleGame{ after(grammarAccess.getModelAccess().getGameGameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DeclAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getDeclDeclarationParserRuleCall_1_0()); }
	ruleDeclaration{ after(grammarAccess.getModelAccess().getDeclDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__StmtAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getStmtStatementBlockParserRuleCall_2_0()); }
	ruleStatementBlock{ after(grammarAccess.getModelAccess().getStmtStatementBlockParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__BlocksAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getBlocksBlockParserRuleCall_3_0()); }
	ruleBlock{ after(grammarAccess.getModelAccess().getBlocksBlockParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Game__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getGameAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Game__AttrAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGameAccess().getAttrAttrListParserRuleCall_3_0()); }
	ruleAttrList{ after(grammarAccess.getGameAccess().getAttrAttrListParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__VarAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getVarVarDeclParserRuleCall_0_0_0()); }
	ruleVarDecl{ after(grammarAccess.getDeclarationAccess().getVarVarDeclParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ObjAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getObjObjDeclParserRuleCall_0_1_0()); }
	ruleObjDecl{ after(grammarAccess.getDeclarationAccess().getObjObjDeclParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getVarDeclAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__ExprAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getExprInitParserRuleCall_2_0_0()); }
	ruleInit{ after(grammarAccess.getVarDeclAccess().getExprInitParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDecl__IntAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDeclAccess().getIntINTTerminalRuleCall_2_1_1_0()); }
	RULE_INT{ after(grammarAccess.getVarDeclAccess().getIntINTTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Init__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitAccess().getExprExprParserRuleCall_1_0()); }
	ruleExpr{ after(grammarAccess.getInitAccess().getExprExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjDeclAccess().getTypeObjTypeParserRuleCall_0_0()); }
	ruleObjType{ after(grammarAccess.getObjDeclAccess().getTypeObjTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjDeclAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getObjDeclAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__AttrAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjDeclAccess().getAttrAttrListParserRuleCall_2_0_1_0()); }
	ruleAttrList{ after(grammarAccess.getObjDeclAccess().getAttrAttrListParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjDecl__IntAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjDeclAccess().getIntINTTerminalRuleCall_2_1_1_0()); }
	RULE_INT{ after(grammarAccess.getObjDeclAccess().getIntINTTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnimBlockAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAnimBlockAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnimBlockAccess().getTypeObjTypeParserRuleCall_3_0()); }
	ruleObjType{ after(grammarAccess.getAnimBlockAccess().getTypeObjTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__ObjNameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnimBlockAccess().getObjNameIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getAnimBlockAccess().getObjNameIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnimBlock__StmtAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnimBlockAccess().getStmtStatementBlockParserRuleCall_6_0()); }
	ruleStatementBlock{ after(grammarAccess.getAnimBlockAccess().getStmtStatementBlockParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__KeyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventBlockAccess().getKeyKeystrokeParserRuleCall_1_0()); }
	ruleKeystroke{ after(grammarAccess.getEventBlockAccess().getKeyKeystrokeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EventBlock__StmtAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventBlockAccess().getStmtStatementBlockParserRuleCall_2_0()); }
	ruleStatementBlock{ after(grammarAccess.getEventBlockAccess().getStmtStatementBlockParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StatementBlock__StmtAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementBlockAccess().getStmtStmtParserRuleCall_1_1_0()); }
	ruleStmt{ after(grammarAccess.getStatementBlockAccess().getStmtStmtParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Ass1Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStmtAccess().getAss1AssStmtParserRuleCall_2_0()); }
	ruleAssStmt{ after(grammarAccess.getForStmtAccess().getAss1AssStmtParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__ExprAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStmtAccess().getExprExprParserRuleCall_3_0()); }
	ruleExpr{ after(grammarAccess.getForStmtAccess().getExprExprParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__Ass2Assignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStmtAccess().getAss2AssStmt2ParserRuleCall_5_0()); }
	ruleAssStmt2{ after(grammarAccess.getForStmtAccess().getAss2AssStmt2ParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStmt__StmtAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStmtAccess().getStmtStatementBlockParserRuleCall_7_0()); }
	ruleStatementBlock{ after(grammarAccess.getForStmtAccess().getStmtStatementBlockParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getExprExprParserRuleCall_2_0()); }
	ruleExpr{ after(grammarAccess.getIfStmtAccess().getExprExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__StmtAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getStmtStatementBlockParserRuleCall_4_0()); }
	ruleStatementBlock{ after(grammarAccess.getIfStmtAccess().getStmtStatementBlockParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ElseAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getElseElseStmtParserRuleCall_5_0()); }
	ruleElseStmt{ after(grammarAccess.getIfStmtAccess().getElseElseStmtParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElseStmt__StmtAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseStmtAccess().getStmtStatementBlockParserRuleCall_1_0()); }
	ruleStatementBlock{ after(grammarAccess.getElseStmtAccess().getStmtStatementBlockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__VarAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssStmtAccess().getVarVarParserRuleCall_0_0()); }
	ruleVar{ after(grammarAccess.getAssStmtAccess().getVarVarParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssStmtAccess().getExprExprParserRuleCall_2_0()); }
	ruleExpr{ after(grammarAccess.getAssStmtAccess().getExprExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt2__VarAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssStmt2Access().getVarVarParserRuleCall_0_0()); }
	ruleVar{ after(grammarAccess.getAssStmt2Access().getVarVarParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssStmt2__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssStmt2Access().getExprExprParserRuleCall_2_0()); }
	ruleExpr{ after(grammarAccess.getAssStmt2Access().getExprExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttrList__AttrAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrListAccess().getAttrAttrAssParserRuleCall_1_0_0()); }
	ruleAttrAss{ after(grammarAccess.getAttrListAccess().getAttrAttrAssParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttrList__AttrAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrListAccess().getAttrAttrAssParserRuleCall_1_1_1_0()); }
	ruleAttrAss{ after(grammarAccess.getAttrListAccess().getAttrAttrAssParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAssAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAttrAssAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttrAss__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttrAssAccess().getExprExprParserRuleCall_2_0()); }
	ruleExpr{ after(grammarAccess.getAttrAssAccess().getExprExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Disj__ConjAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjAccess().getConjConjParserRuleCall_0_0()); }
	ruleConj{ after(grammarAccess.getDisjAccess().getConjConjParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Disj__ConjAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDisjAccess().getConjConjParserRuleCall_1_1_0()); }
	ruleConj{ after(grammarAccess.getDisjAccess().getConjConjParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conj__RelatAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConjAccess().getRelatRelatParserRuleCall_0_0()); }
	ruleRelat{ after(grammarAccess.getConjAccess().getRelatRelatParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conj__RelatAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConjAccess().getRelatRelatParserRuleCall_1_1_0()); }
	ruleRelat{ after(grammarAccess.getConjAccess().getRelatRelatParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relat__AddAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelatAccess().getAddAddParserRuleCall_0_0()); }
	ruleAdd{ after(grammarAccess.getRelatAccess().getAddAddParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relat__AddAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelatAccess().getAddAddParserRuleCall_1_1_0()); }
	ruleAdd{ after(grammarAccess.getRelatAccess().getAddAddParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Add__MultAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddAccess().getMultMultParserRuleCall_0_0()); }
	ruleMult{ after(grammarAccess.getAddAccess().getMultMultParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Add__MultAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddAccess().getMultMultParserRuleCall_1_1_0()); }
	ruleMult{ after(grammarAccess.getAddAccess().getMultMultParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__UnaryAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultAccess().getUnaryUnaryParserRuleCall_0_0()); }
	ruleUnary{ after(grammarAccess.getMultAccess().getUnaryUnaryParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__UnaryAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultAccess().getUnaryUnaryParserRuleCall_1_1_0()); }
	ruleUnary{ after(grammarAccess.getMultAccess().getUnaryUnaryParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__AtomAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryAccess().getAtomAtomParserRuleCall_1_0()); }
	ruleAtom{ after(grammarAccess.getUnaryAccess().getAtomAtomParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__IntAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getIntINTTerminalRuleCall_1_0_0()); }
	RULE_INT{ after(grammarAccess.getAtomAccess().getIntINTTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Var1Assignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getVar1VarParserRuleCall_1_1_0_0()); }
	ruleVar{ after(grammarAccess.getAtomAccess().getVar1VarParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__Var2Assignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getVar2VarParserRuleCall_1_1_1_1_0()); }
	ruleVar{ after(grammarAccess.getAtomAccess().getVar2VarParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atom__ExprAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomAccess().getExprExprParserRuleCall_1_2_1_0()); }
	ruleExpr{ after(grammarAccess.getAtomAccess().getExprExprParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Var__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getVarAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Var__ExprAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getExprExprParserRuleCall_1_0_1_0()); }
	ruleExpr{ after(grammarAccess.getVarAccess().getExprExprParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Var__SubnameAssignment_1_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getSubnameIDTerminalRuleCall_1_0_3_1_0()); }
	RULE_ID{ after(grammarAccess.getVarAccess().getSubnameIDTerminalRuleCall_1_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Var__SubnameAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getSubnameIDTerminalRuleCall_1_1_1_0()); }
	RULE_ID{ after(grammarAccess.getVarAccess().getSubnameIDTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


