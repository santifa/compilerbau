grammar org.xtext.mgpl.MgplDSL with org.eclipse.xtext.common.Terminals

generate mgplDSL "http://www.xtext.org/mgpl/MgplDSL"

Model:
	'game' name=ID	'('	attr=AttrList ')'
	decl+=Declaration*
	stmt=StatementBlock
	blocks+=Block*
;

Declaration:
	(vari=VarDecl | obj=ObjDecl) ';'
;

VarDecl returns VARE:
	'int' name=ID ( ('=' expr=Expr)? | '[' value=INT ']') 
;

ObjDecl returns VARE:
	type=ObjType name=ID ('(' attr=AttrList ')' | '[' value=INT ']') 
;

Block:
	AnimBlock | EventBlock
;

AnimBlock:
	'animation' name=ID '(' type=ObjType objName=ID  ')' stmt=StatementBlock	
;

EventBlock:
	'on' key=Keystroke stmt=StatementBlock
;

ObjType:
	'rectangle' | 'triangle' | 'circle'
;

Keystroke:
	'space' | 'leftarrow' | 'rightarrow' | 'uparrow' | 'downarrow'
;

StatementBlock:
	{StatementBlock} ('{' stmt+=Stmt* '}')
;

Stmt:
	IfStmt | ForStmt | AssStmt
;

ForStmt:
	'for' '(' ass1=AssStmt expr=Expr ';' ass2=AssStmt2 ')' stmt=StatementBlock
;

IfStmt:
	'if' '(' expr=Expr ')' stmt=StatementBlock else=ElseStmt?
;

ElseStmt:
	'else' stmt=StatementBlock	
;

AssStmt:
	var=Var '=' expr=Expr ';'
;

// special for assignment
AssStmt2:
	var=Var '=' expr=Expr
;

// attribution list
AttrList:
	{AttrList} (attr+=AttrAss? (',' attr+=  AttrAss)*)
;

AttrAss:
	name=ID	'=' expr=Expr
;

// define expressions
Expr returns VARI:
	conj+= Conj ('||' conj+=Conj)*
;

Conj returns VARI:
	relat+=Relat ('&&' relat+=Relat)*
;

Relat returns VARI:
	add+=Add (('==' | '<' | '<=') add+=Add)*
;

Add returns VARI:
	mult+=Mult (('+' | '-') mult+=Mult)*
;

Mult returns VARI:
	unary+=Unary (('*' | '/') unary+=Unary)*
;

Unary returns VARI:
	('!' | '-')* atom=Atom
;

Atom:
	(value=INT | var1=Var ( 'touches' var2=Var)? | '(' expr=Expr ')') 
;

// define variables
Var returns VARI:
	name=ID	( '[' expr=Expr ']' ('.' subname=ID)? | '.' subname=ID )?
;
